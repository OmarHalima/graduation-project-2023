"-- Create parsed_cvs table CREATE TABLE IF NOT EXISTS parsed_cvs (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), user_id UUID REFERENCES users(id) ON DELETE CASCADE, full_name TEXT, email TEXT, phone TEXT, summary TEXT, skills TEXT[], education JSONB[], experience JSONB[], certifications JSONB[], languages JSONB[], created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(), updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()); ALTER TABLE parsed_cvs ENABLE ROW LEVEL SECURITY; CREATE POLICY parsed_cvs_select ON parsed_cvs FOR SELECT USING (auth.uid() = user_id OR EXISTS (SELECT 1 FROM users WHERE id = auth.uid() AND role IN ('admin', 'project_manager'))); CREATE POLICY parsed_cvs_insert ON parsed_cvs FOR INSERT WITH CHECK (auth.uid() = user_id OR EXISTS (SELECT 1 FROM users WHERE id = auth.uid() AND role IN ('admin', 'project_manager'))); CREATE POLICY parsed_cvs_update ON parsed_cvs FOR UPDATE USING (auth.uid() = user_id OR EXISTS (SELECT 1 FROM users WHERE id = auth.uid() AND role IN ('admin', 'project_manager'))); CREATE POLICY parsed_cvs_delete ON parsed_cvs FOR DELETE USING (auth.uid() = user_id OR EXISTS (SELECT 1 FROM users WHERE id = auth.uid() AND role IN ('admin', 'project_manager'))); CREATE INDEX parsed_cvs_user_id_idx ON parsed_cvs(user_id);" 
